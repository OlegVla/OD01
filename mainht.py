
#Пример пошагового алгоритма для определения, является ли строка палиндромом.

# Полиандромом называется строка , которая пишеться одинаково слева направо
# и справа на лево ( в том числе  пустая).

"""
Функция для определения, является ли строка палиндромом.
:param s: Входная строка
:return: True, если строка является палиндромом, иначе False
"""
def is_palindrome(s: str) -> bool:
#1. Параметр  s: Входная строка
#2. Приведение символов в строке к нижнему регистру
# Это необходимо для  того, чтобы сравнение было нечувствительно к регистру
# символов(например, "A" и "a" будут считаться одинаковыми).
    s = s.lower()

#3. Удаление всех неалфавитно - цифровых символов :
# Это позволяет игнорировать пробелы, знаки препинания и другие символы, которые
# не влияют на палиндромность строки.
    s = " ".join(char for char in s if char.isalnum())

#4. Сравнение строки с её обратной версией :
# Здесь используется срез `[::-1]`, который создаёт обратную версию строки.
# Если исходная строка равна своей обратной версии, значит, она является палиндромом.
# Этот алгоритм проверяет, является ли строка палиндромом, игнорируя регистр и
# неалфавитно - цифровые символы.
    is_palindrome = (s == s[::-1])
#5. :return: True, если строка является палиндромом, иначе False
    return is_palindrome

# Пример использования функции
if __name__ == "__main__":
    test_string = "A man, a plan, a canal, Panama!"
    if is_palindrome(test_string):
        print(f"'{test_string}' является палиндромом.")
    else:
        print(f"'{test_string}' не является палиндромом.")
